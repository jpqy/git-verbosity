{"version":3,"sources":["helpers/getFollowing.js","helpers/getAvgCommitMsgLength.js","BarChart.js","App.js","serviceWorker.js","index.js"],"names":["getFollowing","user","a","limit","axios","get","followingArray","following","data","slice","map","name","login","href","avatar_url","userInfo","push","console","log","shuffle","j","x","i","length","Math","floor","random","getRandomRepos","reposResponse","shuffledRepos","repoNames","repo","owner","getAvgCommitMsgLengthByRepo","commitsResponse","commitMessages","filter","commitObj","author","commit","message","avgCommitMsgLength","reduce","acc","next","getAvgCommitMsgLengthOfUser","repos","repoPromises","Promise","all","commitLengths","filteredCommitLengths","val","BarChart","chartData","useEffect","am4core","am4themes_animated","chart","am4charts","hiddenState","properties","opacity","paddingRight","title","titles","create","text","fontSize","categoryAxis","yAxes","dataFields","category","renderer","grid","template","strokeOpacity","minGridDistance","labels","dx","minWidth","tooltip","valueAxis","xAxes","inside","fillOpacity","min","cursorTooltipEnabled","baseGrid","dy","series","valueX","categoryY","tooltipText","pointerOrientation","columnsContainer","zIndex","columnTemplate","columns","height","maxHeight","column","cornerRadius","heatRules","target","property","dataField","max","mainContainer","mask","undefined","cursor","lineX","disabled","lineY","behavior","bullet","createChild","circle","radius","valign","align","isMeasured","interactionsEnabled","horizontalCenter","states","adapter","add","parent","pixelRadius","previousBullet","image","width","verticalCenter","propertyFields","events","on","event","dataItem","tooltipDataItem","children","getIndex","isHover","getKey","pixelWidth","id","getCommitMsgLengthDataForChart","users","userLengthPromises","lengths","round","App","useState","setChartData","React","searchTerm","setSearchTerm","loading","setLoading","className","type","placeholder","value","onChange","onClick","then","catch","err","Boolean","window","location","hostname","match","defaults","baseURL","headers","common","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.e4df537c.chunk.js","sourcesContent":["import axios from \"axios\";\n\n/**\n * Returns an array of 9 usernames that the user is following on github\n * including the original user\n * @param {*} user\n */\nexport default async function getFollowing(user, limit = 5) {\n  // Get first 9 users\n  const followingArray = await axios.get(`/users/${user}/following`);\n  const following = followingArray.data\n    .slice(0, limit - 1)\n    .map(user => ({ name: user.login, href: user.avatar_url }));\n  const userInfo = await axios.get(`/users/${user}`);\n  following.push({ name: userInfo.data.login, href: userInfo.data.avatar_url });\n  console.log(following);\n  return following;\n}\n","import axios from \"axios\";\n\n/**\n * Shuffles array in place.\n * @param {Array} a items An array containing the items.\n */\nfunction shuffle(a) {\n  var j, x, i;\n  for (i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    x = a[i];\n    a[i] = a[j];\n    a[j] = x;\n  }\n  return a;\n}\n\n/**\n * Returns an array of random `limit` repo names of the user\n * @param {*} user\n * @param {*} limit\n */\nasync function getRandomRepos(user, limit = 5) {\n  const reposResponse = await axios.get(`/users/${user}/repos`);\n\n  // Randomly select up to 10 repos for sampling\n  const shuffledRepos = shuffle(reposResponse.data);\n  const repoNames = [];\n  for (const repo of shuffledRepos)\n    if (repoNames.length < limit && repo.owner.login === user) {\n      repoNames.push(repo.name);\n    }\n\n  return repoNames;\n}\n\n/**\n * Returns the average commit message length writter by `user` in `repo`\n * @param {*} user\n * @param {*} repo\n */\nasync function getAvgCommitMsgLengthByRepo(user, repo) {\n  const commitsResponse = await axios.get(`/repos/${user}/${repo}/commits`);\n  //console.log(commitsResponse);\n  const commitMessages = commitsResponse.data\n    .filter(commitObj => commitObj.author && commitObj.author.login === user)\n    .map(commitObj => commitObj.commit.message.length);\n  //console.log(commitMessages);\n  const avgCommitMsgLength =\n    commitMessages.reduce((acc, next) => acc + next, 0) / commitMessages.length;\n  return avgCommitMsgLength || 0; // Handle when no commits were made by user\n}\n\n/**\n * Returns the average commit message length of the user (max 30 commits),\n * in 10 random repositories\n * @param {*} user\n */\nexport default async function getAvgCommitMsgLengthOfUser(user) {\n  const repos = await getRandomRepos(user);\n  const repoPromises = repos.map(repo =>\n    getAvgCommitMsgLengthByRepo(user, repo)\n  );\n  const commitLengths = await Promise.all(repoPromises);\n\n  // Don't count if length is 0 (i.e. user never committed)\n  const filteredCommitLengths = commitLengths.filter(length => length !== 0);\n  return (\n    filteredCommitLengths.reduce((acc, val) => acc + val) /\n    filteredCommitLengths.length\n  );\n}\n","import React, { useEffect } from \"react\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\n\n/* Chart code */\n// Themes begin\nexport default function BarChart({ chartData, user }) {\n  useEffect(() => {\n    am4core.useTheme(am4themes_animated);\n    // Themes end\n\n    /**\n     * Chart design taken from Samsung health app\n     */\n\n    let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\n    chart.hiddenState.properties.opacity = 0; // this creates initial fade-in\n\n    chart.paddingRight = 40;\n\n    chart.data = chartData;\n\n    let title = chart.titles.create();\n    title.text = `Average length of ${user}'s commit messages`;\n    title.fontSize = 30;\n\n    let categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());\n    categoryAxis.dataFields.category = \"name\";\n    categoryAxis.renderer.grid.template.strokeOpacity = 0;\n    categoryAxis.renderer.minGridDistance = 10;\n    categoryAxis.renderer.labels.template.dx = -40;\n    categoryAxis.renderer.minWidth = 120;\n    categoryAxis.renderer.tooltip.dx = -40;\n\n    let valueAxis = chart.xAxes.push(new am4charts.ValueAxis());\n    valueAxis.renderer.inside = true;\n    valueAxis.renderer.labels.template.fillOpacity = 0.3;\n    valueAxis.renderer.grid.template.strokeOpacity = 0;\n    valueAxis.min = 0;\n    valueAxis.cursorTooltipEnabled = false;\n    valueAxis.renderer.baseGrid.strokeOpacity = 0;\n    valueAxis.renderer.labels.template.dy = 20;\n\n    let series = chart.series.push(new am4charts.ColumnSeries());\n    series.dataFields.valueX = \"length\";\n    series.dataFields.categoryY = \"name\";\n    series.tooltipText = \"{valueX.value}\";\n    series.tooltip.pointerOrientation = \"vertical\";\n    series.tooltip.dy = -30;\n    series.columnsContainer.zIndex = 100;\n\n    let columnTemplate = series.columns.template;\n    columnTemplate.height = am4core.percent(50);\n    columnTemplate.maxHeight = 50;\n    columnTemplate.column.cornerRadius(60, 10, 60, 10);\n    columnTemplate.strokeOpacity = 0;\n\n    series.heatRules.push({\n      target: columnTemplate,\n      property: \"fill\",\n      dataField: \"valueX\",\n      min: am4core.color(\"#e5dc36\"),\n      max: am4core.color(\"#5faa46\"),\n    });\n    series.mainContainer.mask = undefined;\n\n    let cursor = new am4charts.XYCursor();\n    chart.cursor = cursor;\n    cursor.lineX.disabled = true;\n    cursor.lineY.disabled = true;\n    cursor.behavior = \"none\";\n\n    let bullet = columnTemplate.createChild(am4charts.CircleBullet);\n    bullet.circle.radius = 30;\n    bullet.valign = \"middle\";\n    bullet.align = \"left\";\n    bullet.isMeasured = true;\n    bullet.interactionsEnabled = false;\n    bullet.horizontalCenter = \"right\";\n    bullet.interactionsEnabled = false;\n\n    let hoverState = bullet.states.create(\"hover\");\n    let outlineCircle = bullet.createChild(am4core.Circle);\n    outlineCircle.adapter.add(\"radius\", function (radius, target) {\n      let circleBullet = target.parent;\n      return circleBullet.circle.pixelRadius + 10;\n    });\n\n    let image = bullet.createChild(am4core.Image);\n    image.width = 60;\n    image.height = 60;\n    image.horizontalCenter = \"middle\";\n    image.verticalCenter = \"middle\";\n    image.propertyFields.href = \"href\";\n\n    image.adapter.add(\"mask\", function (mask, target) {\n      let circleBullet = target.parent;\n      return circleBullet.circle;\n    });\n\n    let previousBullet;\n    chart.cursor.events.on(\"cursorpositionchanged\", function (event) {\n      let dataItem = series.tooltipDataItem;\n\n      if (dataItem.column) {\n        let bullet = dataItem.column.children.getIndex(1);\n\n        if (previousBullet && previousBullet != bullet) {\n          previousBullet.isHover = false;\n        }\n\n        if (previousBullet != bullet) {\n          let hs = bullet.states.getKey(\"hover\");\n          hs.properties.dx = dataItem.column.pixelWidth;\n          bullet.isHover = true;\n\n          previousBullet = bullet;\n        }\n      }\n    });\n  }, [chartData]);\n\n  return <div id=\"chartdiv\"></div>;\n}\n","import { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport \"./App.css\";\nimport getFollowing from \"./helpers/getFollowing\";\nimport getAvgCommitMsgLengthOfUser from \"./helpers/getAvgCommitMsgLength\";\nimport BarChart from \"./BarChart\";\n\nconst getCommitMsgLengthDataForChart = async function (user) {\n  const users = await getFollowing(user);\n  //const users = [...following, user];\n  const userLengthPromises = users.map(user =>\n    getAvgCommitMsgLengthOfUser(user.name)\n  );\n  const lengths = await Promise.all(userLengthPromises);\n\n  const chartData = [];\n  for (let i = 0; i < users.length; i++) {\n    chartData.push({\n      name: users[i].name,\n      href: users[i].href,\n      length: Math.round(lengths[i] * 10) / 10,\n    });\n  }\n  console.log(chartData);\n  return chartData;\n};\n\nfunction App() {\n  const [chartData, setChartData] = useState([]);\n\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const [loading, setLoading] = React.useState(false);\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleClick = event => {\n    setChartData([]);\n    setLoading(true);\n    getCommitMsgLengthDataForChart(searchTerm)\n      .then(data => {\n        setChartData(data);\n        setLoading(false);\n      })\n      .catch(err => {\n        setChartData([]);\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <div id=\"w\">\n        <h1>Git Verbosity</h1>\n        <p>\n          Enter a Github username below to find out the average commit message\n          length of the user and their friends!\n        </p>\n\n        <input\n          type=\"text\"\n          name=\"ghusername\"\n          id=\"ghusername\"\n          placeholder=\"Github username...\"\n          value={searchTerm}\n          onChange={handleChange}\n        />\n\n        <button href=\"#\" id=\"ghsubmitbtn\" onClick={handleClick}>\n          Get verbosity\n        </button>\n      </div>\n      {loading && <h1>Loading...</h1>}\n      {loading && (\n        <div className=\"sk-chase\">\n          <div className=\"sk-chase-dot\"></div>\n          <div className=\"sk-chase-dot\"></div>\n          <div className=\"sk-chase-dot\"></div>\n          <div className=\"sk-chase-dot\"></div>\n          <div className=\"sk-chase-dot\"></div>\n          <div className=\"sk-chase-dot\"></div>\n        </div>\n      )}\n      {/* <div>{chartData.map(data => JSON.stringify(data))}</div> */}\n      {chartData.length !== 0 && (\n        <BarChart chartData={chartData} user={searchTerm} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport axios from \"axios\";\naxios.defaults.baseURL = \"https://api.github.com\";\naxios.defaults.headers.common['Authorization'] = \"Basic MTVmMmRlMDE4NGUwYzAxMjVmNWE6YTBiMmNjMzU2NDYwMTQ2MDc2M2RiYzJlNjNhMzVjYzk5MzJmYjY0Mg==\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}